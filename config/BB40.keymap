/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&encoder_1 { status = "okay"; };

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define CONTROL 3

/ {
    behaviors {
        td_lx: tap_dance_layers {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYERS";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&mo 1>, <&mo 2>, <&mo 3>;
        };
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
        triggers-per-rotation = <20>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q     &kp W     &kp E  &kp R      &kp T  &kp Y  &kp U  &kp I      &kp O     &kp P  &kp BSPC
&mo 2      &kp A     &kp S     &kp D  &kp F      &kp G  &kp H  &kp J  &kp K      &kp L            &kp SEMI
&kp LSHFT  &kp Z     &kp X     &kp C  &kp V      &kp B  &kp N  &kp M  &kp COMMA  &kp DOT          &kp RSHFT
&kp LCTRL  &kp LGUI  &kp LALT         &kp SPACE         &mo 1         &kp SPACE  &kp RALT  &mo 3  &kp RCTRL &kp CP_MUTE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            bindings = <
&kp ESC    &kp N1    &kp N2     &kp N3     &kp NUMBER_4  &kp N5     &kp N6     &kp NUMBER_7  &kp NUMBER_8  &kp N9           &kp LC(N0)  &kp DEL
&kp GRAVE  &kp HOME  &kp PG_DN  &kp END    &kp LC(F)     &kp KP_N4  &kp KP_N5  &kp KP_N6     &kp KP_PLUS   &kp KP_MULTIPLY              &kp LC(ENTER)
&trans     &kp FSLH  &kp MINUS  &kp EQUAL  &kp TAB       &kp KP_N1  &kp KP_N2  &kp KP_N3     &kp KP_MINUS  &kp KP_DIVIDE                &trans
&trans     &trans    &trans                &kp BSPC                 &trans                   &kp KP_DOT    &trans           &trans      &trans &kp CP_MUTE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp STAR   &kp LPAR   &kp RPAR      &kp LBKT        &kp RBKT  &trans
&trans  &kp F5        &kp F6        &kp F7        &kp F8        &kp DLLR      &kp PRCNT  &kp CARET  &kp SEMI      &kp APOS                  &kp BSLH
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp EXCL      &kp AT     &kp HASH   &trans        &kp UP                    &trans
&trans  &trans        &trans                      &kp DEL                     &trans                &out OUT_TOG  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT &kp CP_MUTE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        control_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4  &ext_power EP_TOG  &trans  &trans             &trans     &trans  &bootloader
&trans  &bl BL_ON     &kp S         &kp D         &kp F              &kp G         &kp H              &kp J   &kp K              &kp PSCRN          &kp CAPS
&trans  &bt BT_NXT    &bt BT_PRV    &kp C         &kp V              &bt BT_CLR    &kp N              &kp M   &kp KP_NLCK        &kp SLCK           &kp INS
&trans  &trans        &trans                      &ext_power EP_OFF                &trans                     &ext_power EP_TOG  &trans     &trans  &trans &kp CP_MUTE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
